    Checking redis-oxide v0.2.2 (D:\working\base-e-invoice\rust-mux\redis-oxide)
error: binding's name is too similar to existing binding
   --> redis-oxide\examples\performance_demo.rs:169:9
    |
169 |     let original_set_time = start.elapsed();
    |         ^^^^^^^^^^^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\examples\performance_demo.rs:134:9
    |
134 |     let original_get_time = start.elapsed();
    |         ^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names
    = note: `-D clippy::similar-names` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::similar_names)]`

error: binding's name is too similar to existing binding
   --> redis-oxide\examples\performance_demo.rs:181:9
    |
181 |     let optimized_set_time = start.elapsed();
    |         ^^^^^^^^^^^^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\examples\performance_demo.rs:143:9
    |
143 |     let optimized_get_time = start.elapsed();
    |         ^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\examples\performance_demo.rs:296:17
    |
296 |             let encoded = encoder.encode_command("SET", &args).unwrap();
    |                 ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\examples\performance_demo.rs:289:17
    |
289 |         let mut encoder = OptimizedRespEncoder::new();
    |                 ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: unused import: `error::RedisError`
  --> redis-oxide\benches\comprehensive_bench.rs:21:12
   |
21 |     core::{error::RedisError, value::RespValue},
   |            ^^^^^^^^^^^^^^^^^
   |
   = note: `-D unused-imports` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(unused_imports)]`

error: binding's name is too similar to existing binding
   --> redis-oxide\benches\comprehensive_bench.rs:183:21
    |
183 |                 let encoded = encoder.encode(black_box(&value)).unwrap();
    |                     ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\benches\comprehensive_bench.rs:182:25
    |
182 |                 let mut encoder = Resp3Encoder::new();
    |                         ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names
    = note: `-D clippy::similar-names` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::similar_names)]`

error: binding's name is too similar to existing binding
   --> redis-oxide\benches\comprehensive_bench.rs:198:21
    |
198 |                 let encoded = encoder.encode(black_box(&value)).unwrap();
    |                     ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\benches\comprehensive_bench.rs:197:25
    |
197 |                 let mut encoder = Resp3Encoder::new();
    |                         ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
  --> redis-oxide\benches\optimization_comparison.rs:61:21
   |
61 |                 let encoded = encoder.encode(black_box(&value)).unwrap();
   |                     ^^^^^^^
   |
note: existing binding defined here
  --> redis-oxide\benches\optimization_comparison.rs:59:21
   |
59 |             let mut encoder = OptimizedRespEncoder::new();
   |                     ^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names
   = note: `-D clippy::similar-names` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::similar_names)]`

error: binding's name is too similar to existing binding
   --> redis-oxide\benches\optimization_comparison.rs:126:17
    |
126 |             let encoded = encoder
    |                 ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\benches\optimization_comparison.rs:123:17
    |
123 |         let mut encoder = OptimizedRespEncoder::new();
    |                 ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\benches\optimization_comparison.rs:152:17
    |
152 |             let encoded = encoder
    |                 ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\benches\optimization_comparison.rs:149:17
    |
149 |         let mut encoder = OptimizedRespEncoder::new();
    |                 ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\benches\optimization_comparison.rs:243:29
    |
243 |                         let encoded = encoder.encode_command("SET", &args).unwrap();
    |                             ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\benches\optimization_comparison.rs:239:29
    |
239 |                     let mut encoder = OptimizedRespEncoder::new();
    |                             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
 --> redis-oxide\benches\simple_bench.rs:4:17
  |
4 | use criterion::{black_box, criterion_group, criterion_main, Criterion};
  |                 ^^^^^^^^^
  |
  = note: `-D deprecated` implied by `-D warnings`
  = help: to override `-D warnings` add `#[allow(deprecated)]`

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\simple_bench.rs:16:33
   |
16 |             RespEncoder::encode(black_box(&value), &mut buf).unwrap();
   |                                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\simple_bench.rs:17:13
   |
17 |             black_box(buf);
   |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\simple_bench.rs:25:33
   |
25 |             RespEncoder::encode(black_box(&value), &mut buf).unwrap();
   |                                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\simple_bench.rs:26:13
   |
26 |             black_box(buf);
   |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\simple_bench.rs:34:33
   |
34 |             RespEncoder::encode(black_box(&value), &mut buf).unwrap();
   |                                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\simple_bench.rs:35:13
   |
35 |             black_box(buf);
   |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\simple_bench.rs:44:42
   |
44 |             let mut cursor = Cursor::new(black_box(&data[..]));
   |                                          ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\simple_bench.rs:46:13
   |
46 |             black_box(result);
   |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\simple_bench.rs:53:42
   |
53 |             let mut cursor = Cursor::new(black_box(&data[..]));
   |                                          ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\simple_bench.rs:55:13
   |
55 |             black_box(result);
   |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\simple_bench.rs:62:42
   |
62 |             let mut cursor = Cursor::new(black_box(&data[..]));
   |                                          ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\simple_bench.rs:64:13
   |
64 |             black_box(result);
   |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\simple_bench.rs:73:55
   |
73 |             let encoded = RespEncoder::encode_command(black_box("GET"), black_box(&args)).unwrap();
   |                                                       ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\simple_bench.rs:73:73
   |
73 |             let encoded = RespEncoder::encode_command(black_box("GET"), black_box(&args)).unwrap();
   |                                                                         ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\simple_bench.rs:74:13
   |
74 |             black_box(encoded);
   |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\simple_bench.rs:81:55
   |
81 |             let encoded = RespEncoder::encode_command(black_box("SET"), black_box(&args)).unwrap();
   |                                                       ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\simple_bench.rs:81:73
   |
81 |             let encoded = RespEncoder::encode_command(black_box("SET"), black_box(&args)).unwrap();
   |                                                                         ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\simple_bench.rs:82:13
   |
82 |             black_box(encoded);
   |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
 --> redis-oxide\benches\optimization_comparison.rs:9:17
  |
9 | use criterion::{black_box, criterion_group, criterion_main, BenchmarkId, Criterion};
  |                 ^^^^^^^^^
  |
  = note: `-D deprecated` implied by `-D warnings`
  = help: to override `-D warnings` add `#[allow(deprecated)]`

error: unused import: `ContainerAsync`
 --> redis-oxide\tests\test_resp3_protocol.rs:7:59
  |
7 | use testcontainers::{core::WaitFor, runners::AsyncRunner, ContainerAsync, GenericImage};
  |                                                           ^^^^^^^^^^^^^^
  |
  = note: `-D unused-imports` implied by `-D warnings`
  = help: to override `-D warnings` add `#[allow(unused_imports)]`

error: binding's name is too similar to existing binding
  --> redis-oxide\tests\test_resp3_protocol.rs:46:9
   |
46 |     let encoded = encoder.encode(&bool_val)?;
   |         ^^^^^^^
   |
note: existing binding defined here
  --> redis-oxide\tests\test_resp3_protocol.rs:41:13
   |
41 |     let mut encoder = Resp3Encoder::new();
   |             ^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names
   = note: `-D clippy::similar-names` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::similar_names)]`

error: binding's name is too similar to existing binding
  --> redis-oxide\tests\test_resp3_protocol.rs:47:9
   |
47 |     let decoded = decoder.decode(&encoded)?;
   |         ^^^^^^^
   |
note: existing binding defined here
  --> redis-oxide\tests\test_resp3_protocol.rs:42:13
   |
42 |     let mut decoder = Resp3Decoder::new();
   |             ^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
  --> redis-oxide\tests\test_resp3_protocol.rs:52:9
   |
52 |     let encoded = encoder.encode(&double_val)?;
   |         ^^^^^^^
   |
note: existing binding defined here
  --> redis-oxide\tests\test_resp3_protocol.rs:41:13
   |
41 |     let mut encoder = Resp3Encoder::new();
   |             ^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
  --> redis-oxide\tests\test_resp3_protocol.rs:53:9
   |
53 |     let decoded = decoder.decode(&encoded)?;
   |         ^^^^^^^
   |
note: existing binding defined here
  --> redis-oxide\tests\test_resp3_protocol.rs:42:13
   |
42 |     let mut decoder = Resp3Decoder::new();
   |             ^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
  --> redis-oxide\tests\test_resp3_protocol.rs:64:9
   |
64 |     let encoded = encoder.encode(&map_val)?;
   |         ^^^^^^^
   |
note: existing binding defined here
  --> redis-oxide\tests\test_resp3_protocol.rs:41:13
   |
41 |     let mut encoder = Resp3Encoder::new();
   |             ^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
  --> redis-oxide\tests\test_resp3_protocol.rs:65:9
   |
65 |     let decoded = decoder.decode(&encoded)?;
   |         ^^^^^^^
   |
note: existing binding defined here
  --> redis-oxide\tests\test_resp3_protocol.rs:42:13
   |
42 |     let mut decoder = Resp3Decoder::new();
   |             ^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
  --> redis-oxide\tests\test_resp3_protocol.rs:74:9
   |
74 |     let encoded = encoder.encode(&set_val)?;
   |         ^^^^^^^
   |
note: existing binding defined here
  --> redis-oxide\tests\test_resp3_protocol.rs:41:13
   |
41 |     let mut encoder = Resp3Encoder::new();
   |             ^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
  --> redis-oxide\tests\test_resp3_protocol.rs:75:9
   |
75 |     let decoded = decoder.decode(&encoded)?;
   |         ^^^^^^^
   |
note: existing binding defined here
  --> redis-oxide\tests\test_resp3_protocol.rs:42:13
   |
42 |     let mut decoder = Resp3Decoder::new();
   |             ^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\optimization_comparison.rs:52:37
   |
52 |                 RespEncoder::encode(black_box(&value), &mut buf).unwrap();
   |                                     ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\optimization_comparison.rs:53:17
   |
53 |                 black_box(buf);
   |                 ^^^^^^^^^

error: binding's name is too similar to existing binding
  --> redis-oxide\tests\test_resp3_protocol.rs:93:9
   |
93 |     let encoded = encoder.encode(&verbatim_val)?;
   |         ^^^^^^^
   |
note: existing binding defined here
  --> redis-oxide\tests\test_resp3_protocol.rs:85:13
   |
85 |     let mut encoder = Resp3Encoder::new();
   |             ^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\optimization_comparison.rs:61:46
   |
61 |                 let encoded = encoder.encode(black_box(&value)).unwrap();
   |                                              ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\optimization_comparison.rs:62:17
   |
62 |                 black_box(encoded);
   |                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\optimization_comparison.rs:87:46
   |
87 |                 let mut cursor = Cursor::new(black_box(&data[..]));
   |                                              ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\optimization_comparison.rs:89:17
   |
89 |                 black_box(result);
   |                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\optimization_comparison.rs:97:56
   |
97 |                 let results = decoder.decode_streaming(black_box(&data)).unwrap();
   |                                                        ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\optimization_comparison.rs:98:17
   |
98 |                 black_box(results);
   |                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\optimization_comparison.rs:114:55
    |
114 |             let encoded = RespEncoder::encode_command(black_box("GET"), black_box(&args)).unwrap();
    |                                                       ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\optimization_comparison.rs:114:73
    |
114 |             let encoded = RespEncoder::encode_command(black_box("GET"), black_box(&args)).unwrap();
    |                                                                         ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\optimization_comparison.rs:115:13
    |
115 |             black_box(encoded);
    |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\optimization_comparison.rs:127:33
    |
127 |                 .encode_command(black_box("GET"), black_box(&args))
    |                                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\optimization_comparison.rs:127:51
    |
127 |                 .encode_command(black_box("GET"), black_box(&args))
    |                                                   ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\optimization_comparison.rs:129:13
    |
129 |             black_box(encoded);
    |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\optimization_comparison.rs:138:55
    |
138 |             let encoded = RespEncoder::encode_command(black_box("SET"), black_box(&args)).unwrap();
    |                                                       ^^^^^^^^^

error: binding's name is too similar to existing binding
  --> redis-oxide\tests\test_resp3_protocol.rs:94:9
   |
94 |     let decoded = decoder.decode(&encoded)?;
   |         ^^^^^^^
   |
note: existing binding defined here
  --> redis-oxide\tests\test_resp3_protocol.rs:86:13
   |
86 |     let mut decoder = Resp3Decoder::new();
   |             ^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\optimization_comparison.rs:138:73
    |
138 |             let encoded = RespEncoder::encode_command(black_box("SET"), black_box(&args)).unwrap();
    |                                                                         ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\optimization_comparison.rs:139:13
    |
139 |             black_box(encoded);
    |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\optimization_comparison.rs:153:33
    |
153 |                 .encode_command(black_box("SET"), black_box(&args))
    |                                 ^^^^^^^^^

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:102:9
    |
102 |     let encoded = encoder.encode(&markdown_val)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:85:13
    |
 85 |     let mut encoder = Resp3Encoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\optimization_comparison.rs:153:51
    |
153 |                 .encode_command(black_box("SET"), black_box(&args))
    |                                                   ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\optimization_comparison.rs:155:13
    |
155 |             black_box(encoded);
    |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\optimization_comparison.rs:170:13
    |
170 |             black_box(buf);
    |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\optimization_comparison.rs:178:13
    |
178 |             black_box(buf);
    |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\optimization_comparison.rs:185:39
    |
185 |             let s = format!("key_{}", black_box(42));
    |                                       ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\optimization_comparison.rs:186:13
    |
186 |             black_box(s);
    |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\optimization_comparison.rs:194:54
    |
194 |             let s = intern_string(&format!("key_{}", black_box(42)));
    |                                                      ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\optimization_comparison.rs:195:13
    |
195 |             black_box(s);
    |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\optimization_comparison.rs:224:17
    |
224 |                 black_box(total_size);
    |                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\optimization_comparison.rs:246:21
    |
246 |                     black_box(total_size);
    |                     ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\comprehensive_bench.rs:16:17
   |
16 | use criterion::{black_box, criterion_group, criterion_main, BenchmarkId, Criterion, Throughput};
   |                 ^^^^^^^^^
   |
   = note: `-D deprecated` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(deprecated)]`

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\comprehensive_bench.rs:65:37
   |
65 |                 RespEncoder::encode(black_box(&value), &mut buf).unwrap();
   |                                     ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\comprehensive_bench.rs:66:17
   |
66 |                 black_box(buf);
   |                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\comprehensive_bench.rs:80:37
   |
80 |                 RespEncoder::encode(black_box(&value), &mut buf).unwrap();
   |                                     ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
  --> redis-oxide\benches\comprehensive_bench.rs:81:17
   |
81 |                 black_box(buf);
   |                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:115:49
    |
115 |                     RespEncoder::encode_command(black_box(cmd_name), black_box(&args)).unwrap();
    |                                                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:115:70
    |
115 |                     RespEncoder::encode_command(black_box(cmd_name), black_box(&args)).unwrap();
    |                                                                      ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:116:17
    |
116 |                 black_box(encoded);
    |                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:148:46
    |
148 |                 let mut cursor = Cursor::new(black_box(&data[..]));
    |                                              ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:150:17
    |
150 |                 black_box(result);
    |                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:183:46
    |
183 |                 let encoded = encoder.encode(black_box(&value)).unwrap();
    |                                              ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:184:17
    |
184 |                 black_box(encoded);
    |                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:198:46
    |
198 |                 let encoded = encoder.encode(black_box(&value)).unwrap();
    |                                              ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:199:17
    |
199 |                 black_box(encoded);
    |                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:227:45
    |
227 |                 let result = decoder.decode(black_box(&data)).unwrap();
    |                                             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:228:17
    |
228 |                 black_box(result);
    |                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:243:39
    |
243 |             let cmd = GetCommand::new(black_box("test_key"));
    |                                       ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:244:13
    |
244 |             black_box(cmd);
    |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:250:39
    |
250 |             let cmd = SetCommand::new(black_box("test_key"), black_box("test_value"));
    |                                       ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:250:62
    |
250 |             let cmd = SetCommand::new(black_box("test_key"), black_box("test_value"));
    |                                                              ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:251:13
    |
251 |             black_box(cmd);
    |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:260:13
    |
260 |             black_box(args);
    |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:268:13
    |
268 |             black_box(args);
    |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:276:17
    |
276 |                 black_box("hash_key"),
    |                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:277:17
    |
277 |                 black_box("field"),
    |                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:278:17
    |
278 |                 black_box("value"),
    |                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:280:13
    |
280 |             black_box(cmd);
    |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:287:17
    |
287 |                 black_box("list_key"),
    |                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:288:17
    |
288 |                 black_box(vec!["item1".to_string(), "item2".to_string()]),
    |                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:290:13
    |
290 |             black_box(cmd);
    |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:297:17
    |
297 |                 black_box("set_key"),
    |                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:298:17
    |
298 |                 black_box(vec!["member1".to_string(), "member2".to_string()]),
    |                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:300:13
    |
300 |             black_box(cmd);
    |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:309:40
    |
309 |             let cmd = ZAddCommand::new(black_box("zset_key"), black_box(members));
    |                                        ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:309:63
    |
309 |             let cmd = ZAddCommand::new(black_box("zset_key"), black_box(members));
    |                                                               ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:310:13
    |
310 |             black_box(cmd);
    |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:331:53
    |
331 |                 let result = get_cmd.parse_response(black_box(response.clone())).unwrap();
    |                                                     ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:332:17
    |
332 |                 black_box(result);
    |                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:347:53
    |
347 |                 let result = set_cmd.parse_response(black_box(response.clone())).unwrap();
    |                                                     ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:348:17
    |
348 |                 black_box(result);
    |                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:361:50
    |
361 |                 if let RespValue::Array(items) = black_box(&array_response) {
    |                                                  ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:368:21
    |
368 |                     black_box(result);
    |                     ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:385:13
    |
385 |             black_box(buf);
    |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:391:47
    |
391 |             let buf = BytesMut::with_capacity(black_box(1024));
    |                                               ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:392:13
    |
392 |             black_box(buf);
    |             ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:401:36
    |
401 |                 let s = "x".repeat(black_box(size));
    |                                    ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:402:17
    |
402 |                 black_box(s);
    |                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:412:47
    |
412 |                     let s = String::from_utf8(black_box(bytes.clone())).unwrap();
    |                                               ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:413:21
    |
413 |                     black_box(s);
    |                     ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:426:30
    |
426 |                     vec.push(black_box(i));
    |                              ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:428:17
    |
428 |                 black_box(vec);
    |                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:439:34
    |
439 |                         vec.push(black_box(i));
    |                                  ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:441:21
    |
441 |                     black_box(vec);
    |                     ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:466:65
    |
466 |                 let slot = redis_oxide::cluster::calculate_slot(black_box(key.as_bytes()));
    |                                                                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:467:17
    |
467 |                 black_box(slot);
    |                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:486:65
    |
486 |                 let slot = redis_oxide::cluster::calculate_slot(black_box(key.as_bytes()));
    |                                                                 ^^^^^^^^^

error: use of deprecated function `criterion::black_box`: use `std::hint::black_box()` instead
   --> redis-oxide\benches\comprehensive_bench.rs:487:17
    |
487 |                 black_box(slot);
    |                 ^^^^^^^^^

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:103:9
    |
103 |     let decoded = decoder.decode(&encoded)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:86:13
    |
 86 |     let mut decoder = Resp3Decoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:118:9
    |
118 |     let encoded = encoder.encode(&big_num)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:113:13
    |
113 |     let mut encoder = Resp3Encoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:119:9
    |
119 |     let decoded = decoder.decode(&encoded)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:114:13
    |
114 |     let mut decoder = Resp3Decoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:145:9
    |
145 |     let encoded = encoder.encode(&attr_val)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:129:13
    |
129 |     let mut encoder = Resp3Encoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:146:9
    |
146 |     let decoded = decoder.decode(&encoded)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:130:13
    |
130 |     let mut decoder = Resp3Decoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:167:9
    |
167 |     let encoded = encoder.encode(&push_val)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:156:13
    |
156 |     let mut encoder = Resp3Encoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:168:9
    |
168 |     let decoded = decoder.decode(&encoded)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:157:13
    |
157 |     let mut decoder = Resp3Decoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:183:9
    |
183 |     let encoded = encoder.encode(&null_val)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:178:13
    |
178 |     let mut encoder = Resp3Encoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:184:9
    |
184 |     let decoded = decoder.decode(&encoded)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:179:13
    |
179 |     let mut decoder = Resp3Decoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:338:9
    |
338 |     let encoded = encoder.encode(&complex_val)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:305:13
    |
305 |     let mut encoder = Resp3Encoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:339:9
    |
339 |     let decoded = decoder.decode(&encoded)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:306:13
    |
306 |     let mut decoder = Resp3Decoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:354:9
    |
354 |     let encoded = encoder.encode(&simple_error)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:349:13
    |
349 |     let mut encoder = Resp3Encoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:355:9
    |
355 |     let decoded = decoder.decode(&encoded)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:350:13
    |
350 |     let mut decoder = Resp3Decoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:360:9
    |
360 |     let encoded = encoder.encode(&blob_error)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:349:13
    |
349 |     let mut encoder = Resp3Encoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:361:9
    |
361 |     let decoded = decoder.decode(&encoded)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:350:13
    |
350 |     let mut decoder = Resp3Decoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:398:9
    |
398 |     let encoded = encoder.encode(&empty_str)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:393:13
    |
393 |     let mut encoder = Resp3Encoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:399:9
    |
399 |     let decoded = decoder.decode(&encoded)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:394:13
    |
394 |     let mut decoder = Resp3Decoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:404:9
    |
404 |     let encoded = encoder.encode(&empty_array)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:393:13
    |
393 |     let mut encoder = Resp3Encoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:405:9
    |
405 |     let decoded = decoder.decode(&encoded)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:394:13
    |
394 |     let mut decoder = Resp3Decoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:410:9
    |
410 |     let encoded = encoder.encode(&empty_map)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:393:13
    |
393 |     let mut encoder = Resp3Encoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:411:9
    |
411 |     let decoded = decoder.decode(&encoded)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:394:13
    |
394 |     let mut decoder = Resp3Decoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:416:9
    |
416 |     let encoded = encoder.encode(&empty_set)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:393:13
    |
393 |     let mut encoder = Resp3Encoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:417:9
    |
417 |     let decoded = decoder.decode(&encoded)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:394:13
    |
394 |     let mut decoder = Resp3Decoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:422:9
    |
422 |     let encoded = encoder.encode(&zero)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:393:13
    |
393 |     let mut encoder = Resp3Encoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:423:9
    |
423 |     let decoded = decoder.decode(&encoded)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:394:13
    |
394 |     let mut decoder = Resp3Decoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:427:9
    |
427 |     let encoded = encoder.encode(&negative)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:393:13
    |
393 |     let mut encoder = Resp3Encoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:428:9
    |
428 |     let decoded = decoder.decode(&encoded)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:394:13
    |
394 |     let mut decoder = Resp3Decoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:433:9
    |
433 |     let encoded = encoder.encode(&zero_float)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:393:13
    |
393 |     let mut encoder = Resp3Encoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:434:9
    |
434 |     let decoded = decoder.decode(&encoded)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:394:13
    |
394 |     let mut decoder = Resp3Decoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:438:9
    |
438 |     let encoded = encoder.encode(&negative_float)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:393:13
    |
393 |     let mut encoder = Resp3Encoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\tests\test_resp3_protocol.rs:439:9
    |
439 |     let decoded = decoder.decode(&encoded)?;
    |         ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\tests\test_resp3_protocol.rs:394:13
    |
394 |     let mut decoder = Resp3Decoder::new();
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: missing documentation for a function
  --> redis-oxide\benches\simple_bench.rs:87:1
   |
87 | / criterion_group!(
88 | |     benches,
89 | |     bench_resp2_simple_encoding,
90 | |     bench_resp2_simple_decoding,
91 | |     bench_command_encoding
92 | | );
   | |_^
   |
   = note: `-D missing-docs` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(missing_docs)]`
   = note: this error originates in the macro `$crate::criterion_group` which comes from the expansion of the macro `criterion_group` (in Nightly builds, run with -Z macro-backtrace for more info)

error: could not compile `redis-oxide` (example "performance_demo") due to 3 previous errors
warning: build failed, waiting for other jobs to finish...
error: variables can be used directly in the `format!` string
  --> redis-oxide\examples\basic_test.rs:23:9
   |
23 |         println!("GET result: {}", value);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
   = note: `-D clippy::uninlined-format-args` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
   |
23 -         println!("GET result: {}", value);
23 +         println!("GET result: {value}");
   |

error: variables can be used directly in the `format!` string
  --> redis-oxide\examples\basic_test.rs:32:5
   |
32 |     println!("Counter after INCR: {}", new_value);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
32 -     println!("Counter after INCR: {}", new_value);
32 +     println!("Counter after INCR: {new_value}");
   |

error: variables can be used directly in the `format!` string
  --> redis-oxide\examples\basic_test.rs:42:22
   |
42 |         Some(ttl) => println!("TTL for temp:key: {} seconds", ttl),
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
42 -         Some(ttl) => println!("TTL for temp:key: {} seconds", ttl),
42 +         Some(ttl) => println!("TTL for temp:key: {ttl} seconds"),
   |

error: variables can be used directly in the `format!` string
  --> redis-oxide\examples\basic_test.rs:55:5
   |
55 |     println!("Number of existing keys: {}", exists_count);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
55 -     println!("Number of existing keys: {}", exists_count);
55 +     println!("Number of existing keys: {exists_count}");
   |

error: variables can be used directly in the `format!` string
  --> redis-oxide\examples\basic_test.rs:64:22
   |
64 |                 .set(format!("concurrent:key:{}", i), format!("value:{}", i))
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
64 -                 .set(format!("concurrent:key:{}", i), format!("value:{}", i))
64 +                 .set(format!("concurrent:key:{i}"), format!("value:{}", i))
   |

error: variables can be used directly in the `format!` string
  --> redis-oxide\examples\basic_test.rs:64:55
   |
64 |                 .set(format!("concurrent:key:{}", i), format!("value:{}", i))
   |                                                       ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
64 -                 .set(format!("concurrent:key:{}", i), format!("value:{}", i))
64 +                 .set(format!("concurrent:key:{}", i), format!("value:{i}"))
   |

error: variables can be used directly in the `format!` string
  --> redis-oxide\examples\advanced_test.rs:39:9
   |
39 |         println!("tx:key1 = {}", value);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
   = note: `-D clippy::uninlined-format-args` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
   |
39 -         println!("tx:key1 = {}", value);
39 +         println!("tx:key1 = {value}");
   |

error: variables can be used directly in the `format!` string
  --> redis-oxide\examples\advanced_test.rs:42:9
   |
42 |         println!("tx:key2 = {}", value);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
42 -         println!("tx:key2 = {}", value);
42 +         println!("tx:key2 = {value}");
   |

error: variables can be used directly in the `format!` string
  --> redis-oxide\examples\advanced_test.rs:45:9
   |
45 |         println!("tx:key3 = {}", value);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
45 -         println!("tx:key3 = {}", value);
45 +         println!("tx:key3 = {value}");
   |

error: variables can be used directly in the `format!` string
  --> redis-oxide\examples\advanced_test.rs:68:9
   |
68 |         println!("Hash field1 = {}", value);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
68 -         println!("Hash field1 = {}", value);
68 +         println!("Hash field1 = {value}");
   |

error: variables can be used directly in the `format!` string
  --> redis-oxide\examples\advanced_test.rs:72:5
   |
72 |     println!("All hash fields: {:?}", all_fields);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
72 -     println!("All hash fields: {:?}", all_fields);
72 +     println!("All hash fields: {all_fields:?}");
   |

error: variables can be used directly in the `format!` string
  --> redis-oxide\examples\basic_test.rs:77:42
   |
77 |         if let Some(value) = client.get(&format!("concurrent:key:{}", i)).await? {
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
77 -         if let Some(value) = client.get(&format!("concurrent:key:{}", i)).await? {
77 +         if let Some(value) = client.get(&format!("concurrent:key:{i}")).await? {
   |

error: variables can be used directly in the `format!` string
  --> redis-oxide\examples\basic_test.rs:78:13
   |
78 |             println!("concurrent:key:{} = {}", i, value);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
78 -             println!("concurrent:key:{} = {}", i, value);
78 +             println!("concurrent:key:{i} = {value}");
   |

error: variables can be used directly in the `format!` string
  --> redis-oxide\examples\advanced_test.rs:87:5
   |
87 |     println!("List items: {:?}", items);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
87 -     println!("List items: {:?}", items);
87 +     println!("List items: {items:?}");
   |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\advanced_test.rs:100:22
    |
100 |                 .set(format!("mux_test:{}", i), format!("mux_value:{}", i))
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
100 -                 .set(format!("mux_test:{}", i), format!("mux_value:{}", i))
100 +                 .set(format!("mux_test:{i}"), format!("mux_value:{}", i))
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\advanced_test.rs:100:49
    |
100 |                 .set(format!("mux_test:{}", i), format!("mux_value:{}", i))
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
100 -                 .set(format!("mux_test:{}", i), format!("mux_value:{}", i))
100 +                 .set(format!("mux_test:{}", i), format!("mux_value:{i}"))
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\advanced_test.rs:102:30
    |
102 |                 .map_err(|e| format!("Error setting key {}: {}", i, e))
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
102 -                 .map_err(|e| format!("Error setting key {}: {}", i, e))
102 +                 .map_err(|e| format!("Error setting key {i}: {e}"))
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\advanced_test.rs:110:26
    |
110 |             Ok(Ok(_)) => println!("Task {} completed successfully", i),
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
110 -             Ok(Ok(_)) => println!("Task {} completed successfully", i),
110 +             Ok(Ok(_)) => println!("Task {i} completed successfully"),
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\advanced_test.rs:111:27
    |
111 |             Ok(Err(e)) => eprintln!("Task {} failed: {}", i, e),
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
111 -             Ok(Err(e)) => eprintln!("Task {} failed: {}", i, e),
111 +             Ok(Err(e)) => eprintln!("Task {i} failed: {e}"),
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\advanced_test.rs:112:23
    |
112 |             Err(e) => eprintln!("Task {} panicked: {}", i, e),
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
112 -             Err(e) => eprintln!("Task {} panicked: {}", i, e),
112 +             Err(e) => eprintln!("Task {i} panicked: {e}"),
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\advanced_test.rs:118:54
    |
118 |         if let Some(value) = multiplexed_client.get(&format!("mux_test:{}", i)).await? {
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
118 -         if let Some(value) = multiplexed_client.get(&format!("mux_test:{}", i)).await? {
118 +         if let Some(value) = multiplexed_client.get(&format!("mux_test:{i}")).await? {
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\advanced_test.rs:119:13
    |
119 |             println!("mux_test:{} = {}", i, value);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
119 -             println!("mux_test:{} = {}", i, value);
119 +             println!("mux_test:{i} = {value}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\advanced_test.rs:137:49
    |
137 |     let mux_keys: Vec<String> = (0..10).map(|i| format!("mux_test:{}", i)).collect();
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
137 -     let mux_keys: Vec<String> = (0..10).map(|i| format!("mux_test:{}", i)).collect();
137 +     let mux_keys: Vec<String> = (0..10).map(|i| format!("mux_test:{i}")).collect();
    |

error: could not compile `redis-oxide` (bench "simple_bench") due to 20 previous errors
error: could not compile `redis-oxide` (example "basic_test") due to 8 previous errors
error: could not compile `redis-oxide` (bench "optimization_comparison") due to 33 previous errors
error: could not compile `redis-oxide` (example "advanced_test") due to 15 previous errors
error: could not compile `redis-oxide` (bench "comprehensive_bench") due to 60 previous errors
error: function `setup_client_resp3` is never used
 --> redis-oxide\tests\test_resp3_protocol.rs:9:10
  |
9 | async fn setup_client_resp3() -> Result<Client, redis_oxide::RedisError> {
  |          ^^^^^^^^^^^^^^^^^^
  |
  = note: `-D dead-code` implied by `-D warnings`
  = help: to override `-D warnings` add `#[allow(dead_code)]`

error: function `setup_client_resp2` is never used
  --> redis-oxide\tests\test_resp3_protocol.rs:23:10
   |
23 | async fn setup_client_resp2() -> Result<Client, redis_oxide::RedisError> {
   |          ^^^^^^^^^^^^^^^^^^

error: unused variable: `hgetall_result`
  --> redis-oxide\tests\test_transactions_pipelines.rs:83:9
   |
83 |     let hgetall_result = &results[3];
   |         ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_hgetall_result`
   |
   = note: `-D unused-variables` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(unused_variables)]`

error: approximate value of `f{32, 64}::consts::PI` found
  --> redis-oxide\tests\test_resp3_protocol.rs:51:41
   |
51 |     let double_val = Resp3Value::Double(3.14159);
   |                                         ^^^^^^^
   |
   = help: consider using the constant directly
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant
   = note: `-D clippy::approx-constant` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::approx_constant)]`

error: approximate value of `f{32, 64}::consts::PI` found
   --> redis-oxide\tests\test_resp3_protocol.rs:210:41
    |
210 |     let double_val = Resp3Value::Double(3.14);
    |                                         ^^^^
    |
    = help: consider using the constant directly
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant

error: approximate value of `f{32, 64}::consts::PI` found
   --> redis-oxide\tests\test_resp3_protocol.rs:214:40
    |
214 |     assert_eq!(double_val.as_float()?, 3.14);
    |                                        ^^^^
    |
    = help: consider using the constant directly
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant

error: strict comparison of `f32` or `f64`
   --> redis-oxide\tests\test_resp3_protocol.rs:214:5
    |
214 |     assert_eq!(double_val.as_float()?, 3.14);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: `-D clippy::float-cmp` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::float_cmp)]`
    = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error: strict comparison of `f32` or `f64`
   --> redis-oxide\tests\test_resp3_protocol.rs:215:5
    |
215 |     assert_eq!(num_val.as_float()?, 42.0);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error: approximate value of `f{32, 64}::consts::PI` found
   --> redis-oxide\tests\test_resp3_protocol.rs:278:35
    |
278 |     assert_eq!(Resp3Value::Double(3.14).type_name(), "double");
    |                                   ^^^^
    |
    = help: consider using the constant directly
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant

error: approximate value of `f{32, 64}::consts::E` found
   --> redis-oxide\tests\test_resp3_protocol.rs:311:70
    |
311 |     inner_map.insert("nested_number".to_string(), Resp3Value::Double(2.718));
    |                                                                      ^^^^^
    |
    = help: consider using the constant directly
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant

error: variables can be used directly in the `format!` string
  --> redis-oxide\examples\comprehensive_demo.rs:69:5
   |
69 |     println!("SET/GET: {:?}", value);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
   = note: `-D clippy::uninlined-format-args` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
   |
69 -     println!("SET/GET: {:?}", value);
69 +     println!("SET/GET: {value:?}");
   |

error: variables can be used directly in the `format!` string
  --> redis-oxide\examples\comprehensive_demo.rs:76:5
   |
76 |     println!("SET EX: TTL = {:?} seconds", ttl);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
76 -     println!("SET EX: TTL = {:?} seconds", ttl);
76 +     println!("SET EX: TTL = {ttl:?} seconds");
   |

error: variables can be used directly in the `format!` string
  --> redis-oxide\examples\comprehensive_demo.rs:81:5
   |
81 |     println!("SET NX: first={}, second={}", set1, set2);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
81 -     println!("SET NX: first={}, second={}", set1, set2);
81 +     println!("SET NX: first={set1}, second={set2}");
   |

error: variables can be used directly in the `format!` string
  --> redis-oxide\examples\comprehensive_demo.rs:86:5
   |
86 |     println!("INCR: {}", val);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
86 -     println!("INCR: {}", val);
86 +     println!("INCR: {val}");
   |

error: variables can be used directly in the `format!` string
  --> redis-oxide\examples\comprehensive_demo.rs:88:5
   |
88 |     println!("INCRBY 5: {}", val);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
88 -     println!("INCRBY 5: {}", val);
88 +     println!("INCRBY 5: {val}");
   |

error: variables can be used directly in the `format!` string
  --> redis-oxide\examples\comprehensive_demo.rs:94:5
   |
94 |     println!("EXISTS (2 keys): {}", exists);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
   |
94 -     println!("EXISTS (2 keys): {}", exists);
94 +     println!("EXISTS (2 keys): {exists}");
   |

error: empty String is being created manually
   --> redis-oxide\tests\test_resp3_protocol.rs:397:44
    |
397 |     let empty_str = Resp3Value::BlobString("".to_string());
    |                                            ^^^^^^^^^^^^^^ help: consider using: `String::new()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_string_new
    = note: `-D clippy::manual-string-new` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::manual_string_new)]`

error: approximate value of `f{32, 64}::consts::PI` found
   --> redis-oxide\tests\test_resp3_protocol.rs:437:46
    |
437 |     let negative_float = Resp3Value::Double(-3.14);
    |                                              ^^^^
    |
    = help: consider using the constant directly
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant

error: binding's name is too similar to existing binding
   --> redis-oxide\src\protocol\resp2_optimized.rs:452:13
    |
452 |         let encoded = encoder.encode(&value).unwrap();
    |             ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\src\protocol\resp2_optimized.rs:450:17
    |
450 |         let mut encoder = OptimizedRespEncoder::new();
    |                 ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names
note: the lint level is defined here
   --> redis-oxide\src\lib.rs:689:9
    |
689 | #![deny(warnings)]
    |         ^^^^^^^^
    = note: `#[deny(clippy::similar_names)]` implied by `#[deny(warnings)]`

error: binding's name is too similar to existing binding
   --> redis-oxide\src\protocol\resp2_optimized.rs:460:13
    |
460 |         let encoded = encoder.encode_command("GET", &args).unwrap();
    |             ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\src\protocol\resp2_optimized.rs:458:17
    |
458 |         let mut encoder = OptimizedRespEncoder::new();
    |                 ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:113:5
    |
113 |     println!("HGET name: {:?}", name);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
113 -     println!("HGET name: {:?}", name);
113 +     println!("HGET name: {name:?}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:117:5
    |
117 |     println!("HGETALL: {:?}", all_fields);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
117 -     println!("HGETALL: {:?}", all_fields);
117 +     println!("HGETALL: {all_fields:?}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:122:5
    |
122 |     println!("HMGET: {:?}", values);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
122 -     println!("HMGET: {:?}", values);
122 +     println!("HMGET: {values:?}");
    |

error: binding's name is too similar to existing binding
   --> redis-oxide\src\protocol\resp3.rs:797:13
    |
797 |         let encoded = encoder.encode(&value).unwrap();
    |             ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\src\protocol\resp3.rs:795:17
    |
795 |         let mut encoder = Resp3Encoder::new();
    |                 ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\src\protocol\resp3.rs:800:13
    |
800 |         let decoded = decoder.decode(&encoded).unwrap();
    |             ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\src\protocol\resp3.rs:799:17
    |
799 |         let mut decoder = Resp3Decoder::new();
    |                 ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\src\protocol\resp3.rs:809:13
    |
809 |         let encoded = encoder.encode(&value).unwrap();
    |             ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\src\protocol\resp3.rs:807:17
    |
807 |         let mut encoder = Resp3Encoder::new();
    |                 ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\src\protocol\resp3.rs:812:13
    |
812 |         let decoded = decoder.decode(&encoded).unwrap();
    |             ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\src\protocol\resp3.rs:811:17
    |
811 |         let mut decoder = Resp3Decoder::new();
    |                 ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\src\protocol\resp3.rs:821:13
    |
821 |         let encoded = encoder.encode(&value).unwrap();
    |             ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\src\protocol\resp3.rs:819:17
    |
819 |         let mut encoder = Resp3Encoder::new();
    |                 ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\src\protocol\resp3.rs:824:13
    |
824 |         let decoded = decoder.decode(&encoded).unwrap();
    |             ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\src\protocol\resp3.rs:823:17
    |
823 |         let mut decoder = Resp3Decoder::new();
    |                 ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:127:5
    |
127 |     println!("HLEN: {}, HEXISTS email: {}", len, exists);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
127 -     println!("HLEN: {}, HEXISTS email: {}", len, exists);
127 +     println!("HLEN: {len}, HEXISTS email: {exists}");
    |

error: binding's name is too similar to existing binding
   --> redis-oxide\src\protocol\resp3.rs:833:13
    |
833 |         let encoded = encoder.encode(&value).unwrap();
    |             ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\src\protocol\resp3.rs:831:17
    |
831 |         let mut encoder = Resp3Encoder::new();
    |                 ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\src\protocol\resp3.rs:836:13
    |
836 |         let decoded = decoder.decode(&encoded).unwrap();
    |             ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\src\protocol\resp3.rs:835:17
    |
835 |         let mut decoder = Resp3Decoder::new();
    |                 ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\src\protocol\resp3.rs:851:13
    |
851 |         let encoded = encoder.encode(&value).unwrap();
    |             ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\src\protocol\resp3.rs:843:17
    |
843 |         let mut encoder = Resp3Encoder::new();
    |                 ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\src\protocol\resp3.rs:854:13
    |
854 |         let decoded = decoder.decode(&encoded).unwrap();
    |             ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\src\protocol\resp3.rs:853:17
    |
853 |         let mut decoder = Resp3Decoder::new();
    |                 ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\src\protocol\resp3.rs:866:13
    |
866 |         let encoded = encoder.encode(&value).unwrap();
    |             ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\src\protocol\resp3.rs:861:17
    |
861 |         let mut encoder = Resp3Encoder::new();
    |                 ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\src\protocol\resp3.rs:869:13
    |
869 |         let decoded = decoder.decode(&encoded).unwrap();
    |             ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\src\protocol\resp3.rs:868:17
    |
868 |         let mut decoder = Resp3Decoder::new();
    |                 ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\src\protocol\resp3.rs:882:13
    |
882 |         let encoded = encoder.encode(&value).unwrap();
    |             ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\src\protocol\resp3.rs:876:17
    |
876 |         let mut encoder = Resp3Encoder::new();
    |                 ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: binding's name is too similar to existing binding
   --> redis-oxide\src\protocol\resp3.rs:885:13
    |
885 |         let decoded = decoder.decode(&encoded).unwrap();
    |             ^^^^^^^
    |
note: existing binding defined here
   --> redis-oxide\src\protocol\resp3.rs:884:17
    |
884 |         let mut decoder = Resp3Decoder::new();
    |                 ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:143:5
    |
143 |     println!("LPUSH: length = {}", len);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
143 -     println!("LPUSH: length = {}", len);
143 +     println!("LPUSH: length = {len}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:146:5
    |
146 |     println!("RPUSH: length = {}", len);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
146 -     println!("RPUSH: length = {}", len);
146 +     println!("RPUSH: length = {len}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:150:5
    |
150 |     println!("LRANGE: {:?}", items);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
150 -     println!("LRANGE: {:?}", items);
150 +     println!("LRANGE: {items:?}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:154:5
    |
154 |     println!("LINDEX 0: {:?}", first);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
154 -     println!("LINDEX 0: {:?}", first);
154 +     println!("LINDEX 0: {first:?}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:158:5
    |
158 |     println!("LSET then LINDEX 1: {:?}", modified);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
158 -     println!("LSET then LINDEX 1: {:?}", modified);
158 +     println!("LSET then LINDEX 1: {modified:?}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:162:5
    |
162 |     println!("LPOP: {:?}", popped);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
162 -     println!("LPOP: {:?}", popped);
162 +     println!("LPOP: {popped:?}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:165:5
    |
165 |     println!("Final LLEN: {}", final_len);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
165 -     println!("Final LLEN: {}", final_len);
165 +     println!("Final LLEN: {final_len}");
    |

error: long literal lacking separators
   --> redis-oxide\src\streams.rs:445:44
    |
445 |         assert_eq!(entry.timestamp(), Some(1234567890123));
    |                                            ^^^^^^^^^^^^^ help: consider: `1_234_567_890_123`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal
    = note: `#[deny(clippy::unreadable_literal)]` implied by `#[deny(warnings)]`

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:184:5
    |
184 |     println!("SADD: {} members added", added);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
184 -     println!("SADD: {} members added", added);
184 +     println!("SADD: {added} members added");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:188:5
    |
188 |     println!("SMEMBERS: {:?}", members);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
188 -     println!("SMEMBERS: {:?}", members);
188 +     println!("SMEMBERS: {members:?}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:192:5
    |
192 |     println!("SISMEMBER rust: {}", is_member);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
192 -     println!("SISMEMBER rust: {}", is_member);
192 +     println!("SISMEMBER rust: {is_member}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:196:5
    |
196 |     println!("SCARD: {}", cardinality);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
196 -     println!("SCARD: {}", cardinality);
196 +     println!("SCARD: {cardinality}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:200:5
    |
200 |     println!("SRANDMEMBER: {:?}", random);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
200 -     println!("SRANDMEMBER: {:?}", random);
200 +     println!("SRANDMEMBER: {random:?}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:204:5
    |
204 |     println!("SREM: {} members removed", removed);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
204 -     println!("SREM: {} members removed", removed);
204 +     println!("SREM: {removed} members removed");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:223:5
    |
223 |     println!("ZADD: {} members added", added);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
223 -     println!("ZADD: {} members added", added);
223 +     println!("ZADD: {added} members added");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:227:5
    |
227 |     println!("ZRANGE: {:?}", range);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
227 -     println!("ZRANGE: {:?}", range);
227 +     println!("ZRANGE: {range:?}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:233:5
    |
233 | /     println!(
234 | |         "alice - score: {:?}, rank: {:?}, rev_rank: {:?}",
235 | |         score, rank, rev_rank
236 | |     );
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:240:5
    |
240 |     println!("ZCARD: {}", cardinality);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
240 -     println!("ZCARD: {}", cardinality);
240 +     println!("ZCARD: {cardinality}");
    |

error: could not compile `redis-oxide` (test "test_resp3_protocol") due to 54 previous errors
error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:264:9
    |
264 |         println!("  Result {}: {:?}", i, result);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
264 -         println!("  Result {}: {:?}", i, result);
264 +         println!("  Result {i}: {result:?}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:294:9
    |
294 |         println!("  Result {}: {:?}", i, result);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
294 -         println!("  Result {}: {:?}", i, result);
294 +         println!("  Result {i}: {result:?}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:299:5
    |
299 |     println!("Final balance: {:?}", balance);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
299 -     println!("Final balance: {:?}", balance);
299 +     println!("Final balance: {balance:?}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:331:5
    |
331 |     println!("EVAL result: {}", result);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
331 -     println!("EVAL result: {}", result);
331 +     println!("EVAL result: {result}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:335:5
    |
335 |     println!("Script loaded with SHA: {}", sha);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
335 -     println!("Script loaded with SHA: {}", sha);
335 +     println!("Script loaded with SHA: {sha}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:344:5
    |
344 |     println!("EVALSHA result: {}", result);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
344 -     println!("EVALSHA result: {}", result);
344 +     println!("EVALSHA result: {result}");
    |

error: this expression creates a reference which is immediately dereferenced by the compiler
   --> redis-oxide\examples\comprehensive_demo.rs:354:13
    |
354 |             &client,
    |             ^^^^^^^ help: change this to: `client`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow
    = note: `-D clippy::needless-borrow` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::needless_borrow)]`

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:359:5
    |
359 |     println!("ScriptManager result: {}", result);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
359 -     println!("ScriptManager result: {}", result);
359 +     println!("ScriptManager result: {result}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:380:5
    |
380 |     println!("XADD entry 1: {}", entry_id1);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
380 -     println!("XADD entry 1: {}", entry_id1);
380 +     println!("XADD entry 1: {entry_id1}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:387:5
    |
387 |     println!("XADD entry 2: {}", entry_id2);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
387 -     println!("XADD entry 2: {}", entry_id2);
387 +     println!("XADD entry 2: {entry_id2}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:391:5
    |
391 |     println!("XLEN: {}", length);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
391 -     println!("XLEN: {}", length);
391 +     println!("XLEN: {length}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:404:5
    |
404 |     println!("Consumer group '{}' created", group_name);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
404 -     println!("Consumer group '{}' created", group_name);
404 +     println!("Consumer group '{group_name}' created");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:425:13
    |
425 |             println!("XACK: {} messages acknowledged", acked);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
425 -             println!("XACK: {} messages acknowledged", acked);
425 +             println!("XACK: {acked} messages acknowledged");
    |

error: adding items after statements is confusing, since items exist from the start of the scope
   --> redis-oxide\examples\comprehensive_demo.rs:438:5
    |
438 |     use redis_oxide::RedisError;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements
    = note: `-D clippy::items-after-statements` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::items_after_statements)]`

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:442:5
    |
442 |     println!("GET nonexistent key: {:?}", result);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
442 -     println!("GET nonexistent key: {:?}", result);
442 +     println!("GET nonexistent key: {result:?}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:449:5
    |
449 |     println!("HGET on string key: {:?}", hash_result);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
449 -     println!("HGET on string key: {:?}", hash_result);
449 +     println!("HGET on string key: {hash_result:?}");
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:453:28
    |
453 |         Ok(Some(value)) => println!("Found value: {}", value),
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
453 -         Ok(Some(value)) => println!("Found value: {}", value),
453 +         Ok(Some(value)) => println!("Found value: {value}"),
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:455:45
    |
455 |         Err(RedisError::Connection(msg)) => println!("Connection error: {}", msg),
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
455 -         Err(RedisError::Connection(msg)) => println!("Connection error: {}", msg),
455 +         Err(RedisError::Connection(msg)) => println!("Connection error: {msg}"),
    |

error: used `assert_eq!` with a literal bool
  --> redis-oxide\tests\test_transactions_pipelines.rs:39:5
   |
39 |     assert_eq!(results[0].as_bool()?, true);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison
   = note: `-D clippy::bool-assert-comparison` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::bool_assert_comparison)]`
help: replace it with `assert!(..)`
   |
39 -     assert_eq!(results[0].as_bool()?, true);
39 +     assert!(results[0].as_bool()?);
   |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:456:43
    |
456 |         Err(RedisError::Protocol(msg)) => println!("Protocol error: {}", msg),
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
456 -         Err(RedisError::Protocol(msg)) => println!("Protocol error: {}", msg),
456 +         Err(RedisError::Protocol(msg)) => println!("Protocol error: {msg}"),
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:457:42
    |
457 |         Err(RedisError::Cluster(msg)) => println!("Cluster error: {}", msg),
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
457 -         Err(RedisError::Cluster(msg)) => println!("Cluster error: {}", msg),
457 +         Err(RedisError::Cluster(msg)) => println!("Cluster error: {msg}"),
    |

error: used `assert_eq!` with a literal bool
  --> redis-oxide\tests\test_transactions_pipelines.rs:40:5
   |
40 |     assert_eq!(results[1].as_bool()?, true);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison
help: replace it with `assert!(..)`
   |
40 -     assert_eq!(results[1].as_bool()?, true);
40 +     assert!(results[1].as_bool()?);
   |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:458:43
    |
458 |         Err(RedisError::Sentinel(msg)) => println!("Sentinel error: {}", msg),
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
458 -         Err(RedisError::Sentinel(msg)) => println!("Sentinel error: {}", msg),
458 +         Err(RedisError::Sentinel(msg)) => println!("Sentinel error: {msg}"),
    |

error: variables can be used directly in the `format!` string
   --> redis-oxide\examples\comprehensive_demo.rs:459:19
    |
459 |         Err(e) => println!("Other error: {}", e),
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
459 -         Err(e) => println!("Other error: {}", e),
459 +         Err(e) => println!("Other error: {e}"),
    |

error: used `assert_eq!` with a literal bool
   --> redis-oxide\tests\test_transactions_pipelines.rs:115:5
    |
115 |     assert_eq!(results[2].as_bool()?, true);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison
help: replace it with `assert!(..)`
    |
115 -     assert_eq!(results[2].as_bool()?, true);
115 +     assert!(results[2].as_bool()?);
    |

error: used `assert_eq!` with a literal bool
   --> redis-oxide\tests\test_transactions_pipelines.rs:116:5
    |
116 |     assert_eq!(results[3].as_bool()?, true);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison
help: replace it with `assert!(..)`
    |
116 -     assert_eq!(results[3].as_bool()?, true);
116 +     assert!(results[3].as_bool()?);
    |

error: only a `panic!` in `if`-then statement
   --> redis-oxide\tests\test_transactions_pipelines.rs:151:5
    |
151 | /     if !results.is_empty() {
152 | |         panic!("Transaction should be aborted due to watched key modification");
153 | |     }
    | |_____^ help: try instead: `assert!(results.is_empty(), "Transaction should be aborted due to watched key modification");`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_assert
    = note: `-D clippy::manual-assert` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::manual_assert)]`

error: used `assert_eq!` with a literal bool
   --> redis-oxide\tests\test_transactions_pipelines.rs:230:5
    |
230 |     assert_eq!(results[0].as_bool()?, true); // SET
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison
help: replace it with `assert!(..)`
    |
230 -     assert_eq!(results[0].as_bool()?, true); // SET
230 +     assert!(results[0].as_bool()?); // SET
    |

error: used `assert_eq!` with a literal bool
   --> redis-oxide\tests\test_transactions_pipelines.rs:268:5
    |
268 |     assert_eq!(results[0].as_bool()?, true);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison
help: replace it with `assert!(..)`
    |
268 -     assert_eq!(results[0].as_bool()?, true);
268 +     assert!(results[0].as_bool()?);
    |

error: used `assert_eq!` with a literal bool
   --> redis-oxide\tests\test_transactions_pipelines.rs:298:5
    |
298 |     assert_eq!(results1[0].as_bool()?, true);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison
help: replace it with `assert!(..)`
    |
298 -     assert_eq!(results1[0].as_bool()?, true);
298 +     assert!(results1[0].as_bool()?);
    |

error: used `assert_eq!` with a literal bool
   --> redis-oxide\tests\test_transactions_pipelines.rs:299:5
    |
299 |     assert_eq!(results2[0].as_bool()?, true);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison
help: replace it with `assert!(..)`
    |
299 -     assert_eq!(results2[0].as_bool()?, true);
299 +     assert!(results2[0].as_bool()?);
    |

error: the borrowed expression implements the required traits
   --> redis-oxide\tests\test_transactions_pipelines.rs:319:22
    |
319 |         pipeline.set(&format!("large:key{}", i), &format!("value{}", i));
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `format!("large:key{}", i)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args
    = note: `-D clippy::needless-borrows-for-generic-args` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::needless_borrows_for_generic_args)]`

error: the borrowed expression implements the required traits
   --> redis-oxide\tests\test_transactions_pipelines.rs:319:50
    |
319 |         pipeline.set(&format!("large:key{}", i), &format!("value{}", i));
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `format!("value{}", i)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: the borrowed expression implements the required traits
   --> redis-oxide\tests\test_transactions_pipelines.rs:324:22
    |
324 |         pipeline.get(&format!("large:key{}", i));
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `format!("large:key{}", i)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: the loop variable `i` is only used to index `results`
   --> redis-oxide\tests\test_transactions_pipelines.rs:331:14
    |
331 |     for i in 0..num_operations {
    |              ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
    = note: `-D clippy::needless-range-loop` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::needless_range_loop)]`
help: consider using an iterator
    |
331 -     for i in 0..num_operations {
331 +     for <item> in results.iter().take(num_operations) {
    |

error: used `assert_eq!` with a literal bool
   --> redis-oxide\tests\test_transactions_pipelines.rs:332:9
    |
332 |         assert_eq!(results[i].as_bool()?, true);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison
help: replace it with `assert!(..)`
    |
332 -         assert_eq!(results[i].as_bool()?, true);
332 +         assert!(results[i].as_bool()?);
    |

error: could not compile `redis-oxide` (example "comprehensive_demo") due to 49 previous errors
error: used `assert_eq!` with a literal bool
   --> redis-oxide\tests\test_transactions_pipelines.rs:382:13
    |
382 |             assert_eq!(results[set_index].as_bool()?, true);
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison
help: replace it with `assert!(..)`
    |
382 -             assert_eq!(results[set_index].as_bool()?, true);
382 +             assert!(results[set_index].as_bool()?);
    |

error: used `assert_eq!` with a literal bool
   --> redis-oxide\tests\test_transactions_pipelines.rs:419:5
    |
419 |     assert_eq!(results[2].as_bool()?, true); // SET balance
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison
help: replace it with `assert!(..)`
    |
419 -     assert_eq!(results[2].as_bool()?, true); // SET balance
419 +     assert!(results[2].as_bool()?); // SET balance
    |

error: used `assert_eq!` with a literal bool
   --> redis-oxide\tests\test_transactions_pipelines.rs:420:5
    |
420 |     assert_eq!(results[3].as_bool()?, true); // SET last_transaction
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison
help: replace it with `assert!(..)`
    |
420 -     assert_eq!(results[3].as_bool()?, true); // SET last_transaction
420 +     assert!(results[3].as_bool()?); // SET last_transaction
    |

error: collection is never read
   --> redis-oxide\tests\test_streams.rs:190:5
    |
190 |     let mut message_ids = Vec::new();
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collection_is_never_read
    = note: `-D clippy::collection-is-never-read` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::collection_is_never_read)]`

error: empty String is being created manually
   --> redis-oxide\tests\test_streams.rs:315:46
    |
315 |     fields.insert("empty_field".to_string(), "".to_string());
    |                                              ^^^^^^^^^^^^^^ help: consider using: `String::new()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_string_new
    = note: `-D clippy::manual-string-new` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::manual_string_new)]`

error: empty String is being created manually
   --> redis-oxide\tests\test_streams.rs:336:54
    |
336 |     assert_eq!(entry.get_field("empty_field"), Some(&"".to_string()));
    |                                                      ^^^^^^^^^^^^^^ help: consider using: `String::new()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_string_new

error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false
   --> redis-oxide\tests\test_streams.rs:349:17
    |
349 |         assert!(sequence >= 0);
    |                 ^^^^^^^^^^^^^
    |
    = help: because `0` is the minimum value for this type, this comparison is always true
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons
    = note: `-D clippy::absurd-extreme-comparisons` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::absurd_extreme_comparisons)]`

error: adding items after statements is confusing, since items exist from the start of the scope
   --> redis-oxide\tests\test_streams.rs:397:5
    |
397 |     use std::time::{SystemTime, UNIX_EPOCH};
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements
    = note: `-D clippy::items-after-statements` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::items_after_statements)]`

error: adding items after statements is confusing, since items exist from the start of the scope
   --> redis-oxide\tests\test_streams.rs:397:21
    |
397 |     use std::time::{SystemTime, UNIX_EPOCH};
    |                     ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

error: adding items after statements is confusing, since items exist from the start of the scope
   --> redis-oxide\tests\test_streams.rs:397:33
    |
397 |     use std::time::{SystemTime, UNIX_EPOCH};
    |                                 ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

error: casting `u128` to `u64` may truncate the value
   --> redis-oxide\tests\test_streams.rs:398:21
    |
398 |       let timestamp = SystemTime::now()
    |  _____________________^
399 | |         .duration_since(UNIX_EPOCH)
400 | |         .unwrap()
401 | |         .as_millis() as u64;
    | |___________________________^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: `-D clippy::cast-possible-truncation` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::cast_possible_truncation)]`
help: ... or use `try_from` and handle the error accordingly
    |
398 ~     let timestamp = u64::try_from(SystemTime::now()
399 +         .duration_since(UNIX_EPOCH)
400 +         .unwrap()
401 ~         .as_millis());
    |

error: redundant closure
   --> redis-oxide\tests\test_data_types.rs:236:14
    |
236 |         .map(|s| s.to_string())
    |              ^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::ToString::to_string`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls
    = note: `-D clippy::redundant-closure-for-method-calls` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::redundant_closure_for_method_calls)]`

error: calling `to_string` on `&&str`
   --> redis-oxide\tests\test_data_types.rs:236:18
    |
236 |         .map(|s| s.to_string())
    |                  ^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*s).to_string()`
    |
    = help: `&str` implements `ToString` through a slower blanket impl, but `str` has a fast specialization of `ToString`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inefficient_to_string
    = note: `-D clippy::inefficient-to-string` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::inefficient_to_string)]`

error: could not compile `redis-oxide` (test "test_transactions_pipelines") due to 18 previous errors
error: comparison is useless due to type limits
   --> redis-oxide\tests\test_streams.rs:349:17
    |
349 |         assert!(sequence >= 0);
    |                 ^^^^^^^^^^^^^
    |
    = note: `-D unused-comparisons` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(unused_comparisons)]`

error: could not compile `redis-oxide` (test "test_streams") due to 9 previous errors
error: could not compile `redis-oxide` (test "test_data_types") due to 2 previous errors
error: items after a test module
   --> redis-oxide\src\commands\mod.rs:465:1
    |
465 | mod tests {
    | ^^^^^^^^^
...
513 | impl PipelineCommand for GetCommand {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
527 | impl PipelineCommand for SetCommand {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
541 | impl PipelineCommand for DelCommand {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
555 | impl PipelineCommand for IncrCommand {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
569 | impl PipelineCommand for DecrCommand {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
583 | impl PipelineCommand for IncrByCommand {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
597 | impl PipelineCommand for DecrByCommand {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
611 | impl PipelineCommand for ExistsCommand {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
625 | impl PipelineCommand for ExpireCommand {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
639 | impl PipelineCommand for TtlCommand {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_test_module
note: the lint level is defined here
   --> redis-oxide\src\lib.rs:690:9
    |
690 | #![deny(clippy::all)]
    |         ^^^^^^^^^^^
    = note: `#[deny(clippy::items_after_test_module)]` implied by `#[deny(clippy::all)]`
    = help: move the items to before the test module was defined

error: redundant closure
   --> redis-oxide\src\commands\optimized.rs:602:43
    |
602 |         let mut pool = MemoryPool::new(3, || Vec::<i32>::new());
    |                                           ^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Vec::<i32>::new`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure
    = note: `#[deny(clippy::redundant_closure)]` implied by `#[deny(clippy::all)]`

error: calling `as_bytes()` on a string literal
   --> redis-oxide\src\pipeline.rs:520:35
    |
520 |             RespValue::BulkString("value1".as_bytes().into()),
    |                                   ^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead: `b"value1"`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#string_lit_as_bytes
note: the lint level is defined here
   --> redis-oxide\src\lib.rs:692:9
    |
692 | #![deny(clippy::nursery)]
    |         ^^^^^^^^^^^^^^^
    = note: `#[deny(clippy::string_lit_as_bytes)]` implied by `#[deny(clippy::nursery)]`

error: approximate value of `f{32, 64}::consts::PI` found
   --> redis-oxide\src\protocol\resp3.rs:832:40
    |
832 |         let value = Resp3Value::Double(3.14);
    |                                        ^^^^
    |
    = help: consider using the constant directly
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant
    = note: `#[deny(clippy::approx_constant)]` implied by `#[deny(clippy::all)]`

error: approximate value of `f{32, 64}::consts::PI` found
   --> redis-oxide\src\protocol\resp3.rs:909:40
    |
909 |         let value = Resp3Value::Double(3.14);
    |                                        ^^^^
    |
    = help: consider using the constant directly
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant

error: approximate value of `f{32, 64}::consts::PI` found
   --> redis-oxide\src\protocol\resp3.rs:910:47
    |
910 |         assert_eq!(value.as_float().unwrap(), 3.14);
    |                                               ^^^^
    |
    = help: consider using the constant directly
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant

error: strict comparison of `f32` or `f64`
   --> redis-oxide\src\protocol\resp3.rs:910:9
    |
910 |         assert_eq!(value.as_float().unwrap(), 3.14);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_cmp
    = note: `#[deny(clippy::float_cmp)]` implied by `#[deny(warnings)]`
    = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error: calling `as_bytes()` on a string literal
   --> redis-oxide\src\transaction.rs:700:35
    |
700 |             RespValue::BulkString("value1".as_bytes().into()),
    |                                   ^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead: `b"value1"`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#string_lit_as_bytes

error: could not compile `redis-oxide` (lib test) due to 25 previous errors
