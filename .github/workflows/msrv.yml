name: MSRV Verification

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 1'  # Weekly
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  msrv-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-version: [1.82.0]  # Current MSRV
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust ${{ matrix.rust-version }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust-version }}
      
      - name: Show current Rust version
        run: rustc --version
      
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-msrv-${{ matrix.rust-version }}-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Check workspace
        run: cargo check --workspace --all-targets --all-features
      
      - name: Check without default features
        run: cargo check --workspace --no-default-features
      
      - name: Check all features
        run: cargo check --workspace --all-features

  cross-compile-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - x86_64-pc-windows-msvc
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.82.0
      
      - name: Add target
        run: rustup target add ${{ matrix.target }}
      
      - name: Check compilation for ${{ matrix.target }}
        run: cargo check --target ${{ matrix.target }} --workspace --all-features