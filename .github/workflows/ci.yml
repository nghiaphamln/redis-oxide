name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [stable, beta]
    
    services:
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Check formatting
      run: cargo fmt --all -- --check
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    - name: Build
      run: cargo build --all-targets --all-features
    - name: Run tests
      run: cargo test --all-features
    - name: Run doc tests
      run: cargo test --doc --all-features

  msrv:
    name: Check MSRV (1.82.0)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: 1.82.0  # MSRV (Minimum Supported Rust Version)
        components: rust-src
    - name: Build
      run: cargo build --all-targets --all-features
    - name: Test
      run: cargo test --all-targets --all-features

  docs:
    name: Check documentation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
    - name: Build documentation
      run: cargo doc --all-features --no-deps
      env:
        RUSTDOCFLAGS: -Dwarnings
    - name: Check for broken links
      run: cargo doc --document-private-items --all-features --no-deps
      env:
        RUSTDOCFLAGS: -D warnings

  security_audit:
    name: Security audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
    - name: Run security audit
      run: |
        if cargo list --version > /dev/null 2>&1; then
          cargo audit
        else
          echo "cargo-audit not installed, skipping"
        fi
      continue-on-error: true

  cross_platform_check:
    name: Cross-platform compatibility check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
    - name: Run cargo check
      run: cargo check --all-targets --all-features